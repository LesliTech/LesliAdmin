<%#

Lesli

Copyright (c) 2025, Lesli Technologies, S. A.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program. If not, see http://www.gnu.org/licenses/.

Lesli · Ruby on Rails SaaS Development Framework.

Made with ♥ by LesliTech
Building a better future, one line of code at a time.

@contact  hello@lesli.tech
@website  https://www.lesli.tech
@license  GPLv3 http://www.gnu.org/licenses/gpl-3.0.en.html

// · ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~     ~·~
// · 
%>

<script>
    function engineManager() {
        return {
            data: { engines: [] },

            init() {
                const stored = localStorage.getItem('engineData')
                this.data = stored ? JSON.parse(stored) : { engines: [] }
            },

            toggleEngine(engine) {
                const index = this.data.engines.indexOf(engine)
                if (index === -1) {
                    this.data.engines.push(engine)
                } else {
                    this.data.engines.splice(index, 1)
                }
                localStorage.setItem('engineData', JSON.stringify(this.data))
            }
        }
    }
</script>

<%= render LesliView::Layout::Container.new("admin-accounts") do %>
    <%= render LesliView::Components::Header.new("About") %>

    <div class="box" x-data="engineManager()">
        <% @lesli_engines.each do |engine| %>
            <div>
                <%= render(LesliView::Partials::EngineSpec.new(engine)) %>
                <hr class="mt-4 mb-4" />
                <button 
                    @click="toggleEngine('<%= engine[:path].gsub("/","") %>')" 
                    :class="data.engines.includes('<%= engine[:path].gsub("/","") %>') ? 'button is-small is-info' : 'button is-small is-danger'" 
                    x-text="data.engines.includes('<%= engine[:path].gsub("/","") %>') ? 'Activar módulo' : 'Desactivar módulo'">
                </button>
            </div>
            <hr class="my-6 has-background-grey">
        <% end %>
    </div>
<% end %>
